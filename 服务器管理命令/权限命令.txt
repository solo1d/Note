                                                     字体信息: 微软雅黑,常规,小四
文本内容简介:用户权限增加和减少,添加和删除用户,查看文件权限和所有者,查看用
户登录信息,更改用户信息,更改文件缺省设置,ACL权限,文件特殊权限 (SetUID,SetGID,
Sticky BIT), 文件系统属性 chatt 权限 , sudo 系统权限,



u所有者	g所属组	o其他人	a所有人
文件权限>
r读取权限=4	w修改权限=2	x执行权限=1   
目录权限
r列出目录内容	w创建删除文件	x进入目录
-----------------------------------------------------------------------------------
删除文件的前提条件是用户对文件所在的目录有w修改权限.!
-----------------------------------------------------------------------------------
目录和文件如果有 r 权限,那么一定就会有 x 权限
-----------------------------------------------------------------------------------
+增加权限            -减少权限               =无论什么权限都变成后续权限
rwx=7     rw=6          raqx-=5          r=4
权限只有root和所有者可以更改
-----------------------------------------------------------------------------------
查看登录用户信息               ( tty 本地登录)( pts 远程登录)
who            
               
-----------------------------------------------------------------------------------
查看登录用户详细信息
w         (UP 系统连续运行时间)(3 users  3个用户在线)
            (load average: 0.00 .001.0.05  系统负载均衡指数)
            ( 记录了过去1分钟,5分钟,15分钟 系统的平均负载情况)
            (LOGIN@ 登录时间)
            (IDEL 用户空闲时间,没有执行任何命令)
            (JCPU 累计占用cpu的时间) (PCPU 当前命令占用cpu的时间)
            (WHAT 当前用户正在执行什么命令)

-----------------------------------------------------------------------------------
添加一个用户                              添加一个组
useradd      [用户名]                   groupadd     [用户名] [文件或目录]	

-----------------------------------------------------------------------------------
更改用户密码
passwd        [用户名]

-----------------------------------------------------------------------------------
删除一个用户

-----------------------------------------------------------------------------------
权限管理命令                         ,
chmod     [{ugoa}{+-=}{rwx}] [文件或目录]
或>           [mode=421] [文件或目录]
                (可以用逗号来修改多个用户的权限)
-R             递归修改
-----------------------------------------------------------------------------------
改变文件或目录的所有者	(只有root可以修改)
chown      [用户][文件或目录]
-----------------------------------------------------------------------------------
更改文件或目录的所属组	(只有root可以修改)
chgrp       [组] [文件或目录]
-----------------------------------------------------------------------------------
显示,设置文件的缺省权限
umask     [选项或者权限数字]
               (例:unmask 023) (会更改为:777-023=754=rwx r-x r--)(掩码^)
-S            显示文件缺省权限(就是默认权限)



-----------------------------------------------------------------------------------
********************************* ACL 权限 ****需要分区支持 ****************
查看分区 ACL 权限是否已开启
dumpe2fs      [ 选项 ] [ 分区路径 ]
-h                仅显示超级块中信息,而不显示磁盘块组的详细信息

                  $ df -h
                    查看分区表的详细信息
                  $doumpe2fs  -h  /dev/sda3
                   查询 dev/sda3  分区是否支持 ACL 权限
                 ( Default mount options :  user_xattr cal   表示已开启 )

临时开启ACL   $ mount -o remount,acl /
                        重新挂载根分区 , 并挂载加入 acl 权限

-----------------------------------------------------------------------------------
********************************* 设定 ACL 权限   *************************
设定 ACL 权限
setfacl           [ 选项 ] [文件名 ]
-m u : 用户名 : 权限  /文件名             给用户分配 ACL 权限
-m g : 组名    : 权限  /文件名             给组分配 ACL 权限
-m m : 权限 /文件名              修改 mask 权限 (该权限默认值为 u w的 & 掩码)

-x  u(或者g) : 用户 /文件名                删除指定用户或组的 ACL 权限
-b  /文件名     删除所有的 ACL 权限

-d                  设定默认 ACL 权限
   setfacl -m d : u : 用户名 : 权限  /目录名     目录下的新文件继承父目录的 ACL权限
-k                   删除默认 ACL权限

-R                  递归设定 ACL 权限
   setfacl -m u : 用户名 : 权限  -R  /目录名              该目录下所有的文件全部修改


 $getfacl [ 文件名或目录 ]        查看 该文件的 CAL 权限
                  
                  $setfacl -m u:st:rx /root/project/
                 给用户 st 赋予 project 文件 r-x 权限,使用 " u : 用户名 : 权限 " 格式

                  $setfacl -m m:rx /root/project/
                  修改 make 的最高权限

-----------------------------------------------------------------------------------
************* SetUID 用户必须对执行文件有执行权限才可以设置SetUID***********

设定 SetUID            
chmod      [4755] [执行文件或程序]        将文件设置成SetUID 权限
   // 4 代表 USID            7 代表所有者权限           5 代表组用户权限      5 其他人
   // 2 代表 SGID 
   // 1 代表 SBIT  (这个只能对目录)

chmod       u+s  [执行文件或程序]             将文件设置成SetUID 权限 rws r-x r-x
chmod       g+s  [执行文件或程序或目录]   将文件设置成SetGID权限  rwx r-s r-x
chmod       o+t  [目录 ]                              将目录设置成sticky BIT    rw- r-s rwt


----------------------------------------------------------------------------------
********************** 文件系统属性 chattr 命令(可以限制 root ) **********

chattr        [ +或 - 或 =  和 选项 ] [ 文件或目录名 ]     // +增加 -减少 = 等于某权限
-i               如果设定的是 文件 则不允许改名,删除,修改文件内数据
                 如果设定的是 目录 则只能修改目录下文件的数据,但不允许 建立 删除 文件

-a              如果设定的是 文件 则只能在文件中增加数据,但是不能删除和修改数据
                 如果设定的是 目录 那么只允许在目录中 建立 和 修改 文件,但是不能 删除
 
                $ chattr +i /tec/test/          (test 是目录)
                test 目录变成 i 权限  


-----------------------------------------------------------------------------------
*****************************sudo  权限  ** sudo 的操作对象是系统命令 *********
给某个用户或组一定的 root 权限 比如可以重启的命令: 
给用户    使用命令 #visudo 打开文件 并找到以下类似行数
               1            2         3              
               root      ALL = ( ALL ) 
               1 : 用户名
               2 : 被管理主机的地址,是登陆服务器时的地址 (ALL 本机或本网段的任何 IP)
               3 : 括号内的ALL表示所有命令,如果ALL变成 /usr/sbin/shutdown -r now
                     就表示用户可以使用这个命令

给组        使用命令 #visudo 打开文件 并找到以下类似行数
                      1            2          3                
              # %wheel     ALL =(ALL )
                1 :  %后面跟的是 组名   ( wheel 为一个组名 )
                2:   被管理主机的地址,,是登陆服务器时的地址 (ALL本机或本网段的任何 IP)
                3 : 括号内的ALL表示所有命令,如果ALL变成 /usr/sbin/shutdown -r now
                     就表示组内的用户可以使用这个命令
***
范例:  visudo 中特定位置添加  lq      ALL =  /usr/sbin/shutdown -r now
               那么lq 用户就可以使用后面的命令,  
               那么 lq用户就该这么使用
           lq $ sudo -l                 //查询他可以使用的 sudo 命令
          lq $ sudo   /usr/sbin/shutdown -r now        //使用赋予的命令


