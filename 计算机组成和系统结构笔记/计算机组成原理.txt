CU:控制部件  CS:控制流  PU:处理部件  DS:数据流  MM:主存模块  SM:共享主存  IS:指令流

#####################################################################################
一 计算机体系结构的分类:

  从计算机体系结构的并行性能出发,按照指令流和数据流的不同组织方式,把计算机系统的结构分为四类:
             Single Instruction(单指令) | Multiple Instruction(多指令)
 Single Data            SISD                      MISD
  (单数据)       (单指令流单数据流)     |   (多指令流单数据流)
 Multiple Data          SIMD                      MIMD
  (多数据)       (单指令流多数据流)     |   (多指令流多数据流)


SISD(单指令流单数据流)体系结构:顺序执行计算机:CU->CS->PU->DS->MM->SM->IS->CU(循环);
  同一时刻只能执行一条指令(即只有一个控制流),处理一个数据(即只有一个数据流);
  又一个处理器和一个储存器组成;
  *执行能力太过低下;

SIMD(多指令流多数据流)体系结构:并行结构计算机:一个控制器,多个处理器,多个存储模块和一个互联网络组成;
  一条指令可同时对多个数据进行计算;
  单一指令不见,多个处理单元;
  以矩阵处理机和向量处理机为代表;

MISD(多指令流单数据流)体系结构:很少见的一种处理流;
  有多个处理单元,分别执行不同的指令流;
  同一个数据流依次通过各个处理单元;
  *只适用于某些特定算法,在常见计算机系统中很少见;

MIMD(单指令流多数据流)体系结构:并行结构计算机;
  多个处理单元根据不同的控制流执行不同的操作,处理不同的数据; 
  由多台处理机,多个储存模块和一个互联网络组成;
  每台处理机执行自己的指令,操作数也是各取各的,每个处理器都可单独编程;
  有多个处理机和机群系统为代表;
  *非常高速有效的并行体系结构;

######################################################################################













ACC
存储器:    主存储器包含 { 存储体 , MAR  , MDR }  三个模块.  主要是寄存器.


存储器的基本组成:   以存储体为核心.
    存储体 - 存储单元 - 存储元件 (0/1)
     大楼  -  房间   - 床位     (有人/无人)     //这是用来比喻上面的三个关系的.

     存储单元: 存放一串二进制代码.    (指令和数据都存放在这里)
     存储字  : 存储单元中二进制代码的组合.
     存储字长: 存储单元中二进制代码的位数. 存储字的长度.
                每个存储单元赋予一个地址.
            存储单元是按地址寻访的.

    MAR : 存储器地址寄存器, 位数反应存储单元的个数, 
            也保存了存储单元的地址,或者是存储单元的编号.
    MDR : 存储器数据寄存器, 位数反应存储字长, 
            也保存了要保存到存储体当中的数据, 或者是刚刚从存储体当中取出来的数据.


    例如 : 设 MAR = 4位 (最多表示16)
             MDR = 8位 (一个数据长度最长是 8个二进制 ).
         这个时候,存储体的存储单元个数是 16 个, 而且每个存储单元里面都有8个字节长度的二进制数据.
         也就是说这个存储体最大的存储空间是 16*256 = 4096 个字节长度.





存储器     主存储器  高速缓冲存储器   辅助存储器

可分为的类型 :  1. 按存储介质分类   (只有半导体这一种数据是 易失的,其余三个不是)
                   a. 半导体存储器  TTL, MOS(主要是这个,内存用的就是这个)   
                   b. 磁盘存储器    磁头, 磁载体
                   c. 磁芯存储器    硬磁材料 , 环状元件
                   d. 光盘存储器    激光, 磁光材料
              2. 按存取方式分类
                   a. 存储时间与物理地址无关(随机访问)  
                          - 随机存储器  在程序的执行过程中可 读 可 写 .  RAM
                          - 只读存储器  在程序的执行过程中只能读 .       ROM
                   b. 存储时间与物理地址有关(串行访问)
                          - 顺序存取存储器   磁带
                          - 直接存取存储器   磁盘
              3. 按在计算器中的作用分类
                   a. 主存储器  
                          - RAM 可读可写,随机访问,用户数据都保存在这里
                                  = 静态 RAM
                                  = 动态 RAM
                          - ROM  只能读, 系统程序,配置参数,保存在这里,防止用户修改.
                                  = MROM
                                  = PROM
                                  = EPROM
                                  = EEPROM
                   c. Flash Memory   半导体存储器(U盘就是这种),速度比磁盘快,比主存储器慢,可以作为硬盘.(缓存).
                   d. 高速缓冲存储器(Cache),用静态RAM来做, 比主存储器快,作为主存和CPU之间的缓存.
                   e. 辅助存储器     磁盘,磁带,光盘

主存储器的层次结构 :
        1. 存储器三个主要特性的关系
                速度   , 容量   ,  价格
        2. 缓存 - 主存层次 和 主存 - 辅存层次

                     |--------------------|
                     ⬇︎                   |
                    CPU  <---> 缓存 <---> 主存  <---> 辅存
                     |                    ⬆︎
                     |--------------------|

                                          主存         辅存
                                        主存储器     虚拟存储器
                                         实地址       虚地址
                                        物理地址      逻辑地址




存储体的基本组成
       地址总线<-->MAR<-->译码器<-->驱动器<-->存储体<-->读写电路<-->MDR<-->数据总线
                                                     ⬆︎⬇︎
                                              读--> 控制电路  <-- 写
主存和CPU的联系
                  数据总线
          MDR  <-----------> |-----|
    CPU:   读   -----------> | 主存 |
           写   <----------  |     |
          MAR  ----------->  |-----|
                  地址总线


主存中存储单元地址的分配
        12345678       
     高位字节地址为字地址    12 34 56 78   对应 0 - 3地址  , 大端
     低位字节地址为字地址    78 56 34 12   对应 0 - 3地址  , 小端

     设地址线为 24根, 按字节寻址   有 2的24次方  = 16MB
     若字长为16位     按 字 寻址   有   8MW  (8兆字节)
     若字长为32位     按 字 寻址   有   4MW  (4兆字节)


主存的技术指标
    1. 存储容量    主存 存放二进制代码的总位数
    2. 存储速度
          a. 存取时间   存储器的访问时间 
                        读出时间  写入时间
          b. 存取周期   连续两次独立的存储器操作(读或写)所需的最小间隔时间
                        读周期    写周期
    3. 存储器的带宽   位/秒     字/秒
        地址线是单向的, 数据线是双向的 ,     芯片容量
            10根           4根         2的10次方 = 1024b = 1K*4位
            14根           1根         16K*1



动态RAM和静态RAM的比较 (随机存储器 RAM)
                动态.主存(DRAM)    静态.缓存(SRAM)
    存储原理        电容               触发器      
    集成度          高                  低
    芯片引脚        少                  多
    功耗           小                  大
    价格           低                  高
    速度           慢                  快
    刷新           有                  无




只读存储器(ROM)
    一般用来保存系统程序和系统配置信息,分为可编程和不可编程,可修改和不可修改.
      1.掩模ROM(MROM), 只能读. 无法修改,出厂时固定
            行列选择线交叉处有MOS管为 "1"
            行列选择线交叉处无MOS管为 "0"
      2.一次性编程(PROM)    内部是熔丝.  是破坏性编程
            熔丝断   为"0"
            熔丝未断 为"1"
      3.多次编程(EPROM)
            N型沟道浮动栅MOS电路;    通过紫外线照射可以重置其中所有保存的数据.
                D端加正电压    形成浮动栅     S与D不导通为 "0"
                D端不佳正电压   不形成浮动栅   S与D导通为 "1"
      4.多次性编程(EEPROM)
            电可擦写
            局部擦写
            全部擦写
      5.Flash Memory(闪速型存储器)
            比 EPROM   价格便宜.集成度高
            比 EEPROM   电可擦洗重写
            比 EEPROM快  具备RAM功能





存储器与CPU的连接
    1.存储器容量的扩展
        a. 位扩展 (增加存储字长)
              用2片 1K*4位 存储芯片组成1K*8位存储器 (1K=10根地址线,8位=8根数据线)
                  连接到相同的地址线上,  数据线连接到不同的位置上,  同时连接选中片选线和读写线.  同时工作
        b. 字扩展
              用2片 1K*8位 存储芯片组成 2K*8位 的存储器 (2K=11根地址线,2^11, 8位=8根数据线)
                  连接到相同的 地址线和 数据线 和读写线, 使用多余的最后一个地址线来当作片选线. 
                      地址线中间有个取反器, 为1时选择第一个, 为0时 取反器启动,选择第二个.
                      第一个占用1000 0000 ~1111 1111 地址, 第二个占用0000 0000 ~0111 1111地址
        c. 字和位同时扩展
              用8片 1K*4位 存储芯片组成 4K*8位 的存储器 (4K =12根地址线,1K= 10根地址线, 8位=8根地址线)
                每两个为一组, 用一组4根数据线去连接8根数据线, 然后第11 和12根地址线用作片选线. 
                    地址线11和12根连接一个片选译码器, 去选择沟通哪一组来工作.剩下的和字拓展相同.
    2.存储器与CPU的连接
        a. 地址线的连接
        b. 数据线的连接
        c. 读/写 命令线的连接(ROM只读存储器,只有读没有写).
        d. 片选线的连接
        e. 合理选择存储芯片
        f. 其他   时序,负载


存储器的效验
    编码最小距离: 任意两组合法代码之间 二进制位数 的 最小差异.
        编码的纠错,检错能力与编码的最小距离有关.   
            L-1 = D + C ( D ≥ C )     L编码最小距离, D检测错误的位数, C纠正错误的位数.









--------------------------------------------------






            组合电路的特点是: 如果输入撤销了,那么输出结果也会相应的的撤销.

运算器:     ALU(算逻运算单元) 是核心 是组合电路. 
                    他需要两个寄存器,ACC和数据寄存器X,一个保存将要参与运算的数据,一个保存结果.
        
运算器主要包含: ALU, X寄存器, ACC寄存器, MQ寄存器. (甚至更多寄存器)


  X 连接 ALU  , ACC 连接 ALU, ALU 连接 ACC, ACC 连接 MQ.
    区别是ALU只能取X的内容,但是不可以写.  ACC 和 MQ相连, ALU有权限写和读.
    MQ 这个寄存器 只有在计算乘除法的时候才会运用, 加减法是不需要这个寄存器的.


    数据流通方向和权限  *注意 控制器具有所有权限,不受下面的限制
  &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
  &&                                                 &&
  &&     X          ALU        ACC          MQ       &&
  &&   |***|  ---> |***| ---> |***|  ---> |***|      &&
  &&   |***|       |***| <--- |***|  <--- |***|      &&
  &&                                                 &&
  &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&


 加载到各个寄存器的值 和ALU运算命令 都是控制器做的.

加法运算过程:
    首先给出 指令   加 M      // 加是要求进行加法运算, M 是数据存在的地址
    然后进行 初态   把被加数复制到 ACC寄存器中.
    然后进行 初态   把  加数M 复制到 X寄存器中.
    随后进行 计算   ALU开始运算.
    最后运算 结果   给GCC寄存器.    // 因为没有写入指令,所以只是无意义的运算.


减法运算过程:
    首先给出 指令   减 M      // 减是要求进行减法运算, M 是数据存在的地址
    然后进行 初态   把被减数复制到 ACC寄存器中.
    然后进行 初态   把  减数M 复制到 X寄存器中.
    随后进行 计算   ALU开始运算.
    最后运算 结果   给ACC寄存器.    // 因为没有写入指令,所以只是无意义的运算.


乘法运算过程:
    首先给出 指令   乘 M      // 减是要求进行乘法运算, M 是数据存在的地址
    然后进行 初态   把被乘数复制到 ACC寄存器中.
    然后进行 初态   把  乘数M 复制到 MQ寄存器中.
    然后进行 初态   把  ACC的内容赋值给 X寄存器.
    接着进行 清除   把  ACC 清空,将值变为0.
    随后进行 计算   ALU开始运算. 将 X寄存器的内容 乘以 MQ寄存器的内容.
    最后运算 结果   将运算后的结果分开,将高位给 ACC, 低位给MQ. (表达式是 ACC//MQ)

减法运算过程:
    首先给出 指令   除 M
    然后进行 初态   把被除数复制到 ACC寄存器中.
    然后进行 初态   把  除数M 复制到 X寄存器中.
    随后进行 计算   ALU开始运算. 将 ACC寄存器的内容 除以 X寄存器的内容.
    最后运算 结果   将商存放到 MQ寄存器中.
    最后运算 结果   将余数存放到 ACC寄存器中.





ALU





















-------------------------------------------------------


控制器:  按照指令来控制各个部件.

    控制器的功能:     
             解释指令.
             保证指令的按序执行.

    控制器的功能决定了控制器的基本结构.
    控制器包含 CU控制单元, 和两个寄存器 分别是 IR, PC

控制器的基本组成:
    完成一条指令的过程: 需要三个阶段.
        1.取指令.   把内存单元当中保存的的指令 把它取出来,送入到控制器当中. PC 参与其中.
                PC 是程序计数器. (就是个寄存器), 它保存了当前欲执行指令的地址,具有计数器功能(PC)+1 -> PC
                    当这一条指令完成后, PC就指向我们要执行的下一条的指令.

        2.分析指令. 把操作码部分送给控制单元 进行分析.
                IR 是指令寄存器, (也是个寄存器), 他存放了当前需要执行的指令. 
                    控制单元可以从 IR当中把指令的操作码取出来进行分析.

        3.执行指令. 由控制单元 控制相应的控制部件去完成这条指令所需要的操作.
                CU  控制单元, 各种控制信号都是从这个单元发出来的.



------------------------------------------------------------

 
 运算器 , 控制器 , 存储器 构成了计算机的主机.
    运算器的核心是 ALU , 还有三个寄存器 分别是 X ,ACC, MQ 
    控制器包含 CU控制单元, 和两个寄存器 分别是 IR, PC
    存储器包含了 MAR 和MDR 两个寄存器  和一个存储体

主机加上IO 就构成了计算机的硬件系统.



主机完成一条指令的过程:
  取数指令:
    1. PC要把指令的地址送给MAR 
    2. MAR 再把指令送给存储体
    3. 在控制器的控制下,存储体把指定存储单元当中保存的取数指令 ,拿出来送入到 MDR当中.
    4. 在控制器的控制下, 把 MDR的指令存入给 IR当中. 也就是正在运行的指令.
            
    5. 将IR 寄存器当中的指令的操作码部分送入 CU控制单元中.
    6. CU 进行操作码的译码, 然后去控制各个部件去指向操作. 然后控制IR把地址码部分取出.送给MAR.
    7. 然后MAR 把地址码 送给存储体.
    8. 在控制器的控制下, 让存储器把地址的数 取出来送给 MDR.
    9. 让后让 MDR 将数字 送给 ACC.

     - 指令完成 -
   [ 1 - 4 完成了取指令操作 . 5 - 9 完成了取数操作.]


存数指令:
    1. PC要把指令的地址送给MAR 
    2. MAR 再把指令送给存储体
    3. 在控制器的控制下,存储体把指定存储单元当中保存的取数指令 ,拿出来送入到 MDR当中.
    4. 在控制器的控制下, 把 MDR的指令存入给 IR当中. 也就是正在运行的指令.

    5. 将IR 寄存器当中的指令的操作码部分送入 CU控制单元中.
    6. CU 进行操作码的译码, 然后去控制各个部件去指向操作. 然后控制IR把地址码部分取出. 送给MAR
    7. 然后MAR 把地址码 送给存储体.
    8. 控制器 控制将 ACC当中需要保存的数据 取出来送给 MDR.
    9. 最后将 MDR中的数据 送给存储体, 写入到第7步送给存储体的地址中.

     - 指令完成 -
   [ 1 - 4 完成了取指令操作 . 5 - 9 完成了存数操作.]





--------------------------------------------------------------------------------------------





计算机硬件的主要指标
    
1. 机器字节 : cpu一次能处理数据的位数, 与cpu中的寄存器位数有关. 字节越长,性能越好.、
                (例如cpu一次可以处理两个8位的二进制数相加,得到的也是八位的二进制数, 那么机器字节位 8位 ).

2. 运算速度  包括 主频, 核数, 指令运行速度, CPI时钟周期, IPC时钟周期, MIPS, FLOPS浮点运算
        主频
        核数    每个核支持的线程数.
        指令运行速度     使用吉普森法, 计算常用指令的平均运行时间. 越短越好
        CPI    执行一条指令所需要的时钟周期数的个数. 也是平均值. 越少越好
        IPC    一个时钟周期内, 能完成多少个指令,     越多越好.   
        MIPS   每秒执行百万条指令 的个数.    越大越好.
        FLOPS  每秒浮点运算次数             用这个来衡量运算速度是最好的一个指标了.

3. 存储容量   存放二进制信息的总位数. 
       主存容量 
           存储单元个数 * 存储字长  表示方法.
                如 MAR   MDR     容量 (位)
                  2^10  2^8    有 2的十次方 = 1024个存储单元,每个存储单元有8位, 总容量是 1KB X 8位
                  2^16  2^32    有 64KB x 32位  容量
           字节数 表示方法
                如   2^13b = 1 KB   (b 表示位 bit)  = 8192b = 8192/1024/8 = 1 (8是位,1024是字节)
                     2^21b = 256KB     表示有 2的21次方  个二进制位,除8 除1024 就会得到KB
       辅存容量 
           字节数  80GB     G是 2的30次方.







--------------------------------------------------------------------------------------------



总线:    是连接各个部件的信息传输线, 是各个部件共享的传输介质.

    总线上的信息传输分为 串行 和 并行 . 
        串行 就是单个线路的来工作, 适合常远距离传输, 不会出现干扰.
        并行 就是多个线路同时工作. 但是会受到其他线路的干扰, 有可能会产生错误的信息, 所以只适合近距离传输.


总线的分类:
    1. 片内总线  芯片内部的总线
    2. 系统总线  计算机各个部件之间的信息传输线.
        系统总线包括 :
              a. 数据总线 双向 与机器字节,存储字长有关, 但是会小于等于 CPU最高总线宽度, 用多次传输来避免宽度不够.
              b. 地址总线 单向 与存储地址,I/O地址有关, 但是会小于等于 CPU最高总线宽度, 而且是只能从CPU发出信息.
              c. 控制总线 :
                          有出  存储器的读写, 总线使用权, 中断确认
                          有入  中断请求, 总线请求
    3. 通信总线  用于计算机系统之间 与 计算机系统与其他系统 (如控制仪表,移动通信)之间的通信.
            通信总线的传输方式: 
                            串行通信总线
                            并行通信总线



总线的特性:
    1. 机械特性  尺寸, 形状, 管脚数 及 排序顺序
    2. 电气特性  传输方向 和 有效的电平范围, 高低电平的电压分界线是多少.
    3. 功能特性  每根传输线的功能  : 地址, 数据 , 控制, 断开反馈信号 .
    4. 时间特性  信号之间的 时序 关系.


总线的性能指标: 
    1. 总线宽度        数据线的根数
    2. 标准传输率      每秒传输的最大字节数 (MBps 百万字节)
    3. 时钟同步/异步   传输方式是 同步/不同步 的
    4. 总线复用        地质线 与 数据线 复用(共同)一条线
    5. 信号线数        地址线, 数据线 和 控制线的个数 总和
    6. 总线控制方式     突发, 自动, 仲裁, 逻辑, 计数
    7. 其他指标         负载能力(这条总线上可以挂载多少个IO设备)


总线标准
    总线标准    数据线     总线时钟        带宽
    ISA        16        8MHz(独立)     16MBps       独立说的是独立于CPU
    VESA       32         32MHz(cpu)     32MBps        CPU参与
    PCI        32/64     33/66 MHz(独)  132/528MBps
    RS-232     串行通信    数据终端设备(计算机)和数据通信设备(调制调解器)之间的标准接口
    USB        串行接口    普通无屏蔽双绞线  1.5/12/480Mbps   分别对应 usb1.0 1.0 2.0



总线结构
    单总线结构, 所有IO设备 和CPU 主存 在一根总线上,互相抢夺控制权,  效率低下.
    多总线结构:
        1. 双总线结构, cpu,主存,在主存总线上,IO接口在IO总线上,IO设备在IO总线上,IO总线通过通道和主存总线相连.
        2. 三总线结构, 
        3. 多总线结构,



总线判优控制
    1.基本概念 
        主设备(模块)  对总线有控制权.       (主设备数量不一,主设备和从设备可以互相切换权限)
        从设备(模块)  响应 从主设备发来的控制权,但是他没有权限去申请总线占用控制权, (从设备数量不一)

        总线判优控制 集中式
                       链式查询       结构简单容易实现,只有三条控制线,但是效率差,适合嵌入式设备和功能简单的设备上.
                       计数器定时查询  可以进行软件编码,比链式查询多了一条设备地址线. 速度也慢
                       独立请求方式    任何一个IO接口都有两条独立的请求线和应答线. 需要有个调制器,线数多.

                   分布式

总线通信控制
    1. 目的  解决主设备和从设备通信双方 协调配合 问题.
    2. 总线传输周期  主设备和从设备之间完成一次完整的可靠的一次通信所需要的时间.
         但是需要解决以下问题:
            申请分配阶段     主模块申请, 总线仲裁决定.
            寻址阶段        主设备要找到从设备, 主设备向从设备给出地址和指令, 通过地址找到从设备, 命令来完成操作.
            传数阶段        主模块和从模块交换数据
            结束阶段        主模块撤销有关信息, 从模块也撤销有关信息.
    3. 总线通信的四种方式
          同步通信     由统一时标控制数据传送的过程.
          异步通信     采用应答方式, 没有公共时钟标准.
          半同步通信   同步和异步的结合
          分离式通信   从分挖掘系统总线每个瞬间的潜力,  这效率是最高的.
          



--------------------------------------------------------------------------------------------





输入输出系统
    输入输出系统的发展概况
        1.早期
            分散连接, CPU和IO设备 串行工作, 程序查询方式
        2.接口模块和DMA阶段
            总线连接, CPU和IO设备 并行工作, 中断方式 和 DMA方式
        3.具有通道结构的阶段

        4.具有IO处理机的阶段


    输入输出系统的组成
        a.IO软件
            1. 指令   CPU指令的一部分
                操作码| 命令码| 设备码
            2. 通道指令   通道自身的指令
                指出数组的首地址, 传送字数, 操作指令,       如IBM/370 通道指令为64位
        b.IO硬件
            设备     IO接口
            设备     设备控制器    通道

    IO设备与主机的联系方式
        a.IO设备编址方式
            1. 统一编址,    用取数,存数指令.
            2. 不统一编址   用专门的IO指令.
        b.设备选址
            用设备选择电路识别是否被选中
        c.传送方式
            串行 和 并行
        d.联络方式
            1. 立即响应
            2. 异步工作采用应答信号.
            3. 同步工作采用同步时标
        e.IO设备与主机的连接方式
            1. 辐射式连接
                每台设备都配有一套控制线路和信号线. 不便于增删设备
            2.总线连接
                便于增删设备

    IO设备与主机信息传送的控制方式
        a. 程序查询方式    CPU和IO串行工作,  CPU踏步等待IO
        b. 程序中断方式    CPU和IO部分的并行工作, 没有踏步等待现象. 中断现行程序
        c. DMA方式        主存和IO之间有一条直连数据通道,不中断现行程序, 周期窃取, CPU和IO并行工作



    IO设备
        1. 人机交互设备        键盘 鼠标 打印机  显示器
        2. 计算机信息存储设备   磁盘, 光盘 ,磁带等等
        3. 机 - 机通信设备     调制解调器 等.  就是计算机连接计算机
    输出设备
        显示器和打印机
    输入设备
        键盘鼠标,触摸屏

    IO接口
        接口的作用 
            1. 实现设备的选择
            2. 实现数据缓冲达到速度匹配
            3. 实现数据串 - 并格式转换
            4. 实现电平转换
            5. 传送控制命令
            6, 反应设备的状态(忙,就绪,中断请求)
        接口的功能和组成
            a. 总线连接方式的IO接口电路
                1. 设备选择线
                2. 数据线
                3. 命令线
                4. 状态线
            b. 接口等功能和组成
                选址功能         设备选择电路
                传送命令的功能    命令寄存器
                传送数据的功能    数据缓冲寄存器
                反应设备状态      设备状态标记
            c. 接口类型
                1. 按数据 传送方式 分类
                    串行接口 , 并行接口
                2. 按功能 选择的灵活性 分类
                    不可编程, 可编程
                3. 按 通用性 分类
                    通用接口, 专用接口
                4. 按数据传输的 控制方式 分类
                    中断接口,  MDA接口

    程序中断方式
        a.中断服务程序的流程
           1.保护现场 (是硬件来完成的)
                程序断点的保护    中断隐指令完成
                寄存器内容的保护   进栈指令
            2.中断服务
                对不同的IO设备具有不用内容的设备服务
            3.恢复现场      出栈指令
            4.中断返回      中断返回指令
        b.单重中断和多重中断
             单重中断      不允许中断现行的中断服务程序
             多重中断      允许级别更高的中断源, 中断现行的中断服务程序
    


--------------------------------------------------------------------------------------------














