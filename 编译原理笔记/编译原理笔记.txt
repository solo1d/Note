高级语言就是源语言, 汇编或机器语言就是目标语言

-------概论----
--1::编译器在语言处理系统中的位置:

源程序 ->预处理器 ->经过预处理的源程序 ->编译器 ->汇编语言程序 ->汇编器 ->
 可重定位的机器代码 ->连接器/加载器 ->目标机器代码

--2::编译系统的结构
源语言句子 ->第一步分析"源语言" ->句子的语义 ->第二步生成"目标语言" ->目标语言句子.
 第一步分析包含: 语义分析 ,语法分析 , 词法分析 (运行顺序 词法->语法->语义)
 第二步生成包含: 


--3::编译器结构

编译器结构:  
    字符流   -> 词法分析器      }  阶段1
  词法单元流 -> 语法分析器      }
    语法树   -> 语义分析器      }
    语法树   -> 中间代码生成器  }  分析部分/前端(front end):与源语言相关

中间表示形式 -> 机器无关代码优化器

中间表示形式 -> 目标代码生成器     }  阶段2 
目标机器语言 -> 机器相关代码优化器 }  综合部分/后端(back end):与目标语言相关
目标机器语言 ->                    }  (不包括:中间表示形式)


--4::编译的第一个阶段:词法分析器
词法分析的主要任务: 从左向右逐行扫描源程序的字符,识别出各个单词,确定'单词的类型' .
                    将识别出的单词转换成统一的'机内表示' -----词法单元(token)形式 .
 token: < 种别码 , 属性值 >
种别码: 包含 关键字(if之类的), 标识符(变量名), 常量(整形) ,运算符(+-=), 界限符(;{}()=)
                一词一码     ,   多词一码    ,  一型一码  ,一词(型)一码, 一词一码 .

变量声明语句的分析树
   position    =   initial      +   rate      *     60     ;
<id,position> <=> <id,initial> <+> <id,rate> <*> <num,60> <;>




